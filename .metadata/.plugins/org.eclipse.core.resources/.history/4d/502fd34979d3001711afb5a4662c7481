import java.util.Arrays;
import java.util.Vector;

public class Lcs {
	
	static String lcs(String a, String b){
		
		char[] arrA = new char[a.length()];
		char[] arrB = new char[b.length()];
		
		for(int i = 0; i < a.length(); i++)
			arrA[i] = a.charAt(i);
		for(int j = 0; j < b.length(); j++)
			arrB[j] = b.charAt(j);
		
		Vector v = new Vector(); 
		
		int pos = 0;
		int minM = 0;
		int minN = 0;
		boolean skip = false;
		boolean reInitPos = false;
		while(true){
			skip = false;
			reInitPos = false;
			for(int m = minM; m <= minM + pos - 1; m++)
				if(arrA[m] == arrB[minM + pos]){
					v.addElement(arrA[m]);
					minN = minM + pos + 1;
					minM = m + 1;
					skip = true;
					reInitPos = true;
					break;
				}
			if(!skip){
				for(int n = minN; n <= minN + pos; n++)
					if(arrB[n] == arrA[minN + pos]){
						v.addElement(arrB[n]);
						minM = minN + pos + 1;
						minN = n + 1;
						reInitPos = true;
						break;
					}
				}
			if(!reInitPos)
				pos++;
			else
				pos = 0;
			if(minM + pos == arrA.length || minN + pos == arrB.length)
				break;
		}
		
		String output = "";
		
		for(int p = 0; p < v.size(); p++)
			output += (v.elementAt(p)).toString();
		
		return output;
	}
	
}

//https://www.codewars.com/kata/593ff8b39e1cc4bae9000070/train/java

