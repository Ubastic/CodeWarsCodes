//Solution for https://www.codewars.com/kata/52ffcfa4aff455b3c2000750/train/java

import java.util.Deque;
import java.util.LinkedList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

public class Interpreter {
	public static Double input(String input) {
		Deque<String> tokens = tokenize(input);
		
		while(tokens.size() > 0){
			String str = tokens.removeFirst();
			if(str.matches("[\\D&&[\\S]]{0}"))
				System.out.println("works");
		}
		return null;
	}

	private static Deque<String> tokenize(String input) {
		Deque<String> tokens = new LinkedList<>();
	    Pattern pattern = Pattern.compile("=>|[-+*/%=\\(\\)]|[A-Za-z_][A-Za-z0-9_]*|[0-9]*(\\.?[0-9]+)");
	    Matcher m = pattern.matcher(input);
	    while (m.find()) {
	    	tokens.add(m.group());
	    }
	    return tokens;
	}
}