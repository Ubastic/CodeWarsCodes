//Solution for https://www.codewars.com/kata/585894545a8a07255e0002f1/train/java

import java.util.Arrays;

public class ScreenLock {

	public final int[][] adj =	{{1,3,4,-1},
							 	{0,2,3,4,5,-1},
							 	{1,4,5,-1},
							 	{0,1,4,6,7,-1},
							 	{0,1,2,3,5,6,7,8,-1},
							 	{1,2,4,7,8,-1},
							 	{3,4,7,-1},
							 	{3,4,5,6,8,-1},
							 	{4,5,7,-1}};
	
	public int calculateCombinations(char startPosition, int patternLength){

		if(patternLength < 1 || patternLength > 10)
			return 0;

		int count = 0;
		int[] usedLetters = new int[9];
		Arrays.fill(usedLetters, -1);
		usedLetters[0] = (int) startPosition - 65;
		
		while(patternLength != 0){
			fillarray(usedLetters, )
		}
	}
	
	public boolean isValid(int[] arr, int x, int pos){
		int i = 0;
		while(i != pos){
			if(arr[i] == x)
				return false;
		}
		return true;
	}
}
