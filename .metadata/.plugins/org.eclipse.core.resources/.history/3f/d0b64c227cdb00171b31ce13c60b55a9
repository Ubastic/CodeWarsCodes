
public class test {

	public static long findPosition(){
		boolean goToNextLengthIndex = false;
		int lengthIndex = 1;
		int length = 2;
		String s = "324252627282";
		String a = "24";
		while(!goToNextLengthIndex){
			String curr = a;
			int nextInt = Integer.parseInt(a) + 1;
			String b = Integer.toString(nextInt);
			int strPos = lengthIndex + length;
			while(strPos + b.length() <= s.length()){
				nextInt = Integer.parseInt(curr) + 1;
				b = Integer.toString(nextInt);
				String next = s.substring(strPos, strPos + b.length());
				System.out.println("Curr is: " + curr + " Next is: " + next);
				if(!isConsecutive(curr, next)){
					goToNextLengthIndex = true;
					break;
				}
				curr = next;
				strPos += b.length();
			}
			System.out.println("Nothing to check?");
			//nothing left to check
			if(strPos == s.length()){
				return calcPosition(Integer.parseInt(a));
			}
			System.out.println("Last string check...");
			//check last string
			String last = "";
			for(int m = strPos; m < s.length(); m++)
				last += Character.toString(s.charAt(m));
			//THERE IS A PROBLEM HERE!!!!!
			for(int n = last.length(); n < b.length; n++)
				last += "x";
			System.out.println("Last string is: " + last);
			if(isConsecutive(curr,last))
				return calcPosition(Integer.parseInt(a));
			else
				goToNextLengthIndex = true;
		}
		return 0;
	}
	
	public static long calcPosition(long index){
		long sum = 0;
		long checkAmt = 10;
		while(checkAmt < index){
			sum += 9 * (checkAmt / 10) * (Math.log10(checkAmt));
			checkAmt *= 10;
		}
		checkAmt /= 10;
		sum += (index - checkAmt) * Math.log10(checkAmt * 10);
		return sum;
	}
	
	public static boolean isConsecutive(String a, String b){
		//if number has an x
		int numA = Integer.parseInt(a);
		int tempNum = numA + 1;
		String checkNum = Integer.toString(tempNum);
		for(int i = 0; i < checkNum.length(); i++)
			if(checkNum.charAt(i) != b.charAt(i) && b.charAt(i) != 'x')
				return false;
		return true;
	}
	
}
