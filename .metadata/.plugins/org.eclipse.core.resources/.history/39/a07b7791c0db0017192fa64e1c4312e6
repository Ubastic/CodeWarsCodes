
public class test {
	
	public static long findPosition(){
		String s = "99100";
		String a = "9";
		boolean goToNextLengthIndex = false;
		int lengthIndex = 0;
		int length = 1;
		while(!goToNextLengthIndex){
			String curr = a;
			int nextInt = Integer.parseInt(a) + 1;
			String b = Integer.toString(nextInt);
			//System.out.println("curr is: " + curr + " nextInt is: " + nextInt);
			int strPos = lengthIndex;
			while(strPos + b.length() <= s.length()){
				System.out.println("Entered while");
				String next = s.substring(strPos, strPos + b.length());
				if(!isConsecutive(curr, next)){
					goToNextLengthIndex = true;
					break;
				}
				curr = next;
				nextInt = Integer.parseInt(curr) + 1;
				b = Integer.toString(nextInt);
				System.out.println("curr is: " + curr + " nextInt is: " + nextInt);
				strPos += b.length();
			}
			System.out.println("Exited while");
			if(strPos == s.length()){
				return calcPosition(Integer.parseInt(a)) - lengthIndex;
			}
			String last = "";
			for(int m = strPos; m < s.length(); m++)
				last += Character.toString(s.charAt(m));
			for(int n = last.length(); n < b.length(); n++)
				last += "x";
			if(isConsecutive(curr,last))
				return calcPosition(Integer.parseInt(a)) - lengthIndex;
			else
				goToNextLengthIndex = true;
		}
		return 0;
	}

	public static long calcPosition(long index){
		long sum = 0;
		long checkAmt = 10;
		while(checkAmt < index){
			sum += 9 * (checkAmt / 10) * (Math.log10(checkAmt));
			checkAmt *= 10;
		}
		checkAmt /= 10;
		sum += (index - checkAmt) * Math.log10(checkAmt * 10);
		return sum;
	}

	public static boolean isConsecutive(String a, String b){
		System.out.println("a is: " + a + " b is: " + b);
		boolean bHasX = false;
		for(int i = 0; i < b.length(); i++)
			if(b.charAt(i) == 'x')
				bHasX = true;
		if(bHasX){
			int numA = Integer.parseInt(a);
			int tempNum = numA + 1;
			String checkNum = Integer.toString(tempNum);
			for(int i = 0; i < checkNum.length(); i++)
				if(checkNum.charAt(i) != b.charAt(i) && b.charAt(i) != 'x')
					return false;
			return true;
		}
		else{
			int numB = Integer.parseInt(b);
			int tempNum = numB - 1;
			String checkNum = Integer.toString(tempNum);
			for(int i = 0; i < checkNum.length(); i++)
				if(checkNum.charAt(i) != a.charAt(i) && a.charAt(i) != 'x')
					return false;
			return true;
		}
	}
	
}
